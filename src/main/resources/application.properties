spring.application.name=demo

# Configuración del servidor
server.port=8080

# Configuración de MySQL - Conecta a la BD existente
# Usa variables de entorno para seguridad
spring.datasource.url=jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?useSSL=false&serverTimezone=UTC
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configuración de JPA/Hibernate
# IMPORTANTE: Usar 'none' porque la BD ya existe con datos
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Configuración de Thymeleaf
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Logging
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO
logging.level.com.example.demo=DEBUG

# GOOGLE OAUTH2 CONFIGURATION
# El {registrationId} es reemplazado automáticamente por Spring Security con "google"
# La URI debe apuntar a tu aplicación, NO a la base de datos
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_SECRET_ID}
spring.security.oauth2.client.registration.google.scope=email,profile

# IMPORTANTE: Esta es la URI de redirección correcta
# Para desarrollo local: http://localhost:8080/login/oauth2/code/google
# Para producción: https://tudominio.com/login/oauth2/code/google
# Spring reemplaza {baseUrl} con tu URL base y {registrationId} con "google"
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Provider configuration (opcional, Spring usa defaults para Google)
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub